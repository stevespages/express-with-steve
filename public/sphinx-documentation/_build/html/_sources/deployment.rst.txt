:doc:`Home </index>`

Deploy Using Github and Heroku
==============================

Here we will see how this documentation is deployed. It is written using Sphinx. A text editor (I am currently using vim) is used to create an `index.rst` and other `.rst` files. With sphinx installed these files can be converted into html files using the command ``make html``. These html files are generated in a directory called `html`. An express app is created which serves these static files to the browser:

.. code::

   const express = require('express');
   const path = require('path');
   
   // heroku will assign a port env variable
   const PORT = process.env.PORT || 3000;
   
   const app = express()
   
   app.use(express.static(path.join(__dirname, 'public/sphinx-documentation/_build/html')));
   
   app.listen(PORT, () => {
       console.log(`listening on ${PORT}`);
   });

The overall directory structure for the express app that serves the html files generated by Sphinx is:

.. code::

   steve@Dell ~/Desktop/express-with-steve $ tree -I node_modules -L 4
   .
   ├── app.js
   ├── package.json
   ├── package-lock.json
   ├── Procfile
   ├── public
   │   └── sphinx-documentation
   │       ├── _build
   │       │   ├── doctrees
   │       │   └── html
   │       ├── conf.py
   │       ├── heroku.rst
   │       ├── index.rst
   │       ├── make.bat
   │       ├── Makefile
   │       ├── _static
   │       └── _templates
   └── README.md

We can see that we have a directory, `express-with-steve`. This directory is under git version control (it has `.git` and `.gitignore` in it but these and also `node_modules` are not shown in the tree structure above). When `.rst` files are edited and the command ``make html`` is run html files in `public/sphinx-documentation/_build/html` are updated. As can be seen from the `app.js` code this directory is being accessed by `app.js`.

The contents of the `express-with-steve` directory is pushed to www.github.com/stevespages/express-with-steve. An app called `express-with-steve` was created at `heroku` and linked to the github repo referred to above. So, when changes to the sphinx documentation are made and pushed to github they update the heroku website.
